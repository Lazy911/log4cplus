log4cplus 1.1.0-RC7

IMPORTANT: Builds with --with-iconv configure switch now assume UTF-8
           for plain char strings.

- Bumped up SO version for UDP sockets support related changes.

- Removed Windows CE support.

- Regenerated with Automake 1.12.2.

- Fixed Fedora RPM builds spec file.

- Implemented log4cplus.disableOverride similar to log4j's
  log4j.disableOverride.

- Improved support of profiling and debugging builds with Sun CC.

- Added documentation for configure script options.

- Added detection and use of clock_nanosleep().

- Disabled __thread (TLS) detection for NetBSD. It is broken there.

- New appender: Log4jUdpAppender. It allows logging using UDP with
  log4j XML payload to Chainsaw or Log2Console. (Siva Chandran P)

- Added support for __func__ as function name source for logging
  events.


log4cplus 1.1.0-RC6

- Fixed compilation for build with wchar_t being alias to unsigned
  short (/Zc:wchar_t-) (Windows).

- Added new appender CLFSAppender (experimental), based on Microsoft
  Common Log File System API.

- Added new appender Qt4DebugAppender (experimenta), based on Qt4's
  qDebug(), qWarning() and qCritical() functions.

- Fixed bug #3530769 - compilation issues with Visual Studio 2011.

- Added log4cplus.quietMode property handling to PropertyConfigurator.

- Added #pragma once to all headers.

- Implemented Time::gettimeofday() using Win32 API's
  GetSystemTimeAsFileTime().

- Moved file based locking from FileAppender to Appender to make it
  available for all appenders.

- Changed Windows configuration to use __declspec(thread) when
  compiling for Windows Vista or later and TlsAlloc() otherwise.

- Implemented %r PatternLayout format specifier - miliseconds since
  process start.

- Fixed bug #3101459 - TTCCLayout time is not in milliseconds since
  process start by default.


log4cplus 1.1.0-RC5

- Fixed single threaded log4cplus build issues.

- Added ability to log to std::cerr (Andreas Bießmann).

- Fixed disabling of LOG4CPLUS_*_FMT() macros.


log4cplus 1.1.0-RC4

IMPORTANT: Compilation with Solaris Studio now depends on STLPort
           (-library=stlport4 switch). The default Cstd library is not
           conforming enough for use in log4cplus.

- Improved behaviour of log4cplus as a component of larger CMake based
  project (Andreas Bießmann).

- Updated various Autoconf detection scripts in m4/ directory to newer
  versions.

- Fixed some signedness and overflow warnings.

- Improved Autotools build system's behaviour for cross compilation.

- Added detection of C++11 <atomic> header and related
  functions. Implemented SharedObject reference counting using C++11
  atomics where possible.

- Fixed compilation with GCC 4.6 in C++11 mode.

- Fixed some single-threaded compilation and run time issues.

- Fixed bug #3520891 - FileAppender buffering issue.

- Updated to Autoconf 2.69, Automake 1.12 and Libtool 2.4.2.

- Documented build procedure for Solaris Studio.

- Improved support for Solaris Studio in configure.in.


log4cplus 1.1.0-RC3

- Fixed log4cplusS.vcxproj - Added missing source files to the
  project.


log4cplus 1.1.0-RC2

- CMake build system fixes.

- Fixed TTCCLayout double time stamp issue.


log4cplus 1.1.0-RC1

Important changes relative to PRODUCTION_1_0_x branch:

- Added AsyncAppender.

- Added simple C interface for interoperability with C.

- Added inter-process file locking to file appenders to allow logging
  into a single log file from multiple processes.

- Added Mapped Diagnostic Context (MDC) and associated converter (%X).

- Added alternative thread identification (%T) converter to pattern layout.

- Added function name converter (%M).

- Added wchar_t <-> char conversion implementations based on standard
  C locale functions and based on iconv().

- Added DeviceAppender to allow use of Boost.IOStream's Sink as appender.

- Added LOG4CPLUS_*_FMT() macros to allow printf-like formatted output
  where it is possible.

- Logging macros now accept both logger name as string and Logger
  instance as their first parameter.
